{"version":3,"names":["CatIconRegistry","constructor","this","id","Math","random","toString","substring","icons","Map","addIcons","crossCircleFilled","starCircleFilled","clockFilled","checkCircleFilled","dangerFilled","crossOutlined","crossCircleOutlined","alertCircleOutlined","chevronLeftOutlined","chevronRightOutlined","cross16","chevronDownOutlined","window","addEventListener","event","detail","setName","removeIcons","names","static","instance","getIcon","name","icon","get","buildName","log","error","silent","iconEntries","Object","entries","iconSize","length","forEach","data","set","info","dispatchEvent","buildEvent","delete","CustomEvent","bubbles","composed","catIconRegistry","getInstance"],"sources":["./src/components/cat-icon/cat-icon-registry.ts"],"sourcesContent":["import cross16 from '@haiilo/catalyst-icons/tmp/assets/16-cross.svg';\nimport alertCircleOutlined from '@haiilo/catalyst-icons/tmp/assets/alert-circle-outlined.svg';\nimport checkCircleFilled from '@haiilo/catalyst-icons/tmp/assets/check-circle-filled.svg';\nimport chevronDownOutlined from '@haiilo/catalyst-icons/tmp/assets/chevron-down-outlined.svg';\nimport chevronLeftOutlined from '@haiilo/catalyst-icons/tmp/assets/chevron-left-outlined.svg';\nimport chevronRightOutlined from '@haiilo/catalyst-icons/tmp/assets/chevron-right-outlined.svg';\nimport clockFilled from '@haiilo/catalyst-icons/tmp/assets/clock-filled.svg';\nimport crossCircleFilled from '@haiilo/catalyst-icons/tmp/assets/cross-circle-filled.svg';\nimport crossCircleOutlined from '@haiilo/catalyst-icons/tmp/assets/cross-circle-outlined.svg';\nimport crossOutlined from '@haiilo/catalyst-icons/tmp/assets/cross-outlined.svg';\nimport dangerFilled from '@haiilo/catalyst-icons/tmp/assets/danger-filled.svg';\nimport starCircleFilled from '@haiilo/catalyst-icons/tmp/assets/star-circle-filled.svg';\nimport log from 'loglevel';\n\nexport class CatIconRegistry {\n  private static instance: CatIconRegistry;\n\n  private readonly id = (Math.random() + 1).toString(36).substring(2);\n  private readonly icons: Map<string, string> = new Map();\n\n  private constructor() {\n    // hide constructor\n\n    // register default icons that are used in the framework by other components\n    this.addIcons(\n      {\n        'alert-danger': crossCircleFilled,\n        'alert-primary': starCircleFilled,\n        'alert-secondary': clockFilled,\n        'alert-success': checkCircleFilled,\n        'alert-warning': dangerFilled,\n        'dialog-close': crossOutlined,\n        'input-close': crossCircleOutlined,\n        'input-error': alertCircleOutlined,\n        'notification-close': crossCircleOutlined,\n        'pagination-left': chevronLeftOutlined,\n        'pagination-right': chevronRightOutlined,\n        'select-clear': cross16,\n        'select-open': chevronDownOutlined\n      },\n      '$cat',\n      true\n    );\n\n    // In rare cases, the registry can be initialized twice. This can happen in\n    // a micro frontend architecture where the registry is initialized in the\n    // host application and in the micro frontend. To prevent the registry in\n    // one application from overwriting the registry in the other, we listen for\n    // events that are dispatched when icons are added or removed in other\n    // applications and add or remove icons if the event was not dispatched by\n    // this registry.\n    window.addEventListener('cat-icons-added', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (detail && detail.id !== this.id) {\n        this.addIcons(detail.icons, detail.setName, true);\n      }\n    });\n    window.addEventListener('cat-icons-removed', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (detail && detail.id !== this.id) {\n        this.removeIcons(detail.names, detail.setName, true);\n      }\n    });\n  }\n\n  static getInstance(): CatIconRegistry {\n    if (!CatIconRegistry.instance) {\n      CatIconRegistry.instance = new CatIconRegistry();\n    }\n    return CatIconRegistry.instance;\n  }\n\n  getIcon(name: string, setName?: string): string | undefined {\n    const icon = this.icons.get(this.buildName(name, setName));\n    if (!icon) {\n      log.error(`[CatIconRegistry] Unknown icon${setName ? ` in set ${setName}` : ''}: ${name}`);\n    }\n    return icon;\n  }\n\n  addIcons(icons: { [name: string]: string }, setName?: string, silent = false): CatIconRegistry {\n    const iconEntries = Object.entries(icons);\n    const iconSize = iconEntries.length;\n    iconEntries.forEach(([name, data]) => this.icons.set(this.buildName(name, setName), data));\n    log.info(`[CatIconRegistry] Added ${iconSize !== 1 ? 'icons' : 'icon'}${setName ? ` to set ${setName}` : ''}`);\n    !silent && window.dispatchEvent(this.buildEvent('cat-icons-added', { id: this.id, icons, setName }));\n    return this;\n  }\n\n  removeIcons(names: string[], setName?: string, silent = false): CatIconRegistry {\n    const iconSize = names.length;\n    names.forEach(name => this.icons.delete(this.buildName(name, setName)));\n    log.info(`[CatIconRegistry] Removed ${iconSize !== 1 ? 'icons' : 'icon'}${setName ? ` from set ${setName}` : ''}`);\n    !silent && window.dispatchEvent(this.buildEvent('cat-icons-removed', { id: this.id, names, setName }));\n    return this;\n  }\n\n  private buildName(name: string, setName?: string) {\n    return setName ? `${setName}:${name}` : name;\n  }\n\n  private buildEvent<T>(name: string, detail?: T) {\n    return new CustomEvent(name, {\n      bubbles: true,\n      composed: true,\n      detail\n    });\n  }\n}\n\nexport const catIconRegistry = CatIconRegistry.getInstance();\n"],"mappings":"w6HAcaA,EAMXC,cAHiBC,KAAAC,IAAMC,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,GAChDL,KAAAM,MAA6B,IAAIC,IAMhDP,KAAKQ,SACH,CACE,eAAgBC,EAChB,gBAAiBC,EACjB,kBAAmBC,EACnB,gBAAiBC,EACjB,gBAAiBC,EACjB,eAAgBC,EAChB,cAAeC,EACf,cAAeC,EACf,qBAAsBD,EACtB,kBAAmBE,EACnB,mBAAoBC,EACpB,eAAgBC,EAChB,cAAeC,GAEjB,OACA,MAUFC,OAAOC,iBAAiB,mBAAmBC,IACzC,MAAMC,OAAEA,GAAYD,GAAyB,GAC7C,GAAIC,GAAUA,EAAOvB,KAAOD,KAAKC,GAAI,CACnCD,KAAKQ,SAASgB,EAAOlB,MAAOkB,EAAOC,QAAS,K,KAGhDJ,OAAOC,iBAAiB,qBAAqBC,IAC3C,MAAMC,OAAEA,GAAYD,GAAyB,GAC7C,GAAIC,GAAUA,EAAOvB,KAAOD,KAAKC,GAAI,CACnCD,KAAK0B,YAAYF,EAAOG,MAAOH,EAAOC,QAAS,K,KAKrDG,qBACE,IAAK9B,EAAgB+B,SAAU,CAC7B/B,EAAgB+B,SAAW,IAAI/B,C,CAEjC,OAAOA,EAAgB+B,Q,CAGzBC,QAAQC,EAAcN,GACpB,MAAMO,EAAOhC,KAAKM,MAAM2B,IAAIjC,KAAKkC,UAAUH,EAAMN,IACjD,IAAKO,EAAM,CACTG,EAAIC,MAAM,iCAAiCX,EAAU,WAAWA,IAAY,OAAOM,I,CAErF,OAAOC,C,CAGTxB,SAASF,EAAmCmB,EAAkBY,EAAS,OACrE,MAAMC,EAAcC,OAAOC,QAAQlC,GACnC,MAAMmC,EAAWH,EAAYI,OAC7BJ,EAAYK,SAAQ,EAAEZ,EAAMa,KAAU5C,KAAKM,MAAMuC,IAAI7C,KAAKkC,UAAUH,EAAMN,GAAUmB,KACpFT,EAAIW,KAAK,2BAA2BL,IAAa,EAAI,QAAU,SAAShB,EAAU,WAAWA,IAAY,OACxGY,GAAUhB,OAAO0B,cAAc/C,KAAKgD,WAAW,kBAAmB,CAAE/C,GAAID,KAAKC,GAAIK,QAAOmB,aACzF,OAAOzB,I,CAGT0B,YAAYC,EAAiBF,EAAkBY,EAAS,OACtD,MAAMI,EAAWd,EAAMe,OACvBf,EAAMgB,SAAQZ,GAAQ/B,KAAKM,MAAM2C,OAAOjD,KAAKkC,UAAUH,EAAMN,MAC7DU,EAAIW,KAAK,6BAA6BL,IAAa,EAAI,QAAU,SAAShB,EAAU,aAAaA,IAAY,OAC5GY,GAAUhB,OAAO0B,cAAc/C,KAAKgD,WAAW,oBAAqB,CAAE/C,GAAID,KAAKC,GAAI0B,QAAOF,aAC3F,OAAOzB,I,CAGDkC,UAAUH,EAAcN,GAC9B,OAAOA,EAAU,GAAGA,KAAWM,IAASA,C,CAGlCiB,WAAcjB,EAAcP,GAClC,OAAO,IAAI0B,YAAYnB,EAAM,CAC3BoB,QAAS,KACTC,SAAU,KACV5B,U,QAKO6B,EAAkBvD,EAAgBwD,qB"}