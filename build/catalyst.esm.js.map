{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","requiredMarker","autoComplete","clearable","disabled","hint","icon","iconRight","identifier","label","labelHidden","max","maxLength","min","minLength","name","placeholder","textPrefix","textSuffix","readonly","required","round","type","value","hasSlottedLabel","doFocus","doBlur","doClick","clear","page","pageCount","activePadding","sidePadding","size","variant","compact","iconPrev","iconNext","activeTab","tabsAlign","tabs","activeTabId","color","noIcon","pulse","for","checked","labelLeft","a11yLabel","iconOnly","urlTarget","deactivated","rows","content","placement","showDelay","hideDelay","longTouchDuration","multiple","debounce","tags","tagHint","connector","state","connect","noAutoClose","overflow","close","initials","src","backgroundImage","indeterminate","noShadowX","noShadowY","noOverflowX","noOverflowY","noOverscroll","noScrolledInit","scrolledBuffer","effect","lines","active","loading","submit","noEllipsis","buttonId","a11yCurrent","_iconOnly","isVisible","show"],"mappings":"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","sourcesContent":["/*\n Stencil Client Patch Browser v2.17.4 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}