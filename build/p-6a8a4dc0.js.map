{"version":3,"sources":["../node_modules/toastify-js/src/toastify.js","src/components/cat-notification/cat-notification.tsx"],"names":["root","factory","module","exports","Toastify","this","global","options","lib","init","version","defaults","oldestFirst","text","node","undefined","duration","selector","callback","destination","newWindow","close","gravity","positionLeft","position","backgroundColor","avatar","className","stopOnFocus","onClick","offset","x","y","escapeMarkup","style","background","prototype","toastify","constructor","toastElement","buildToast","divElement","document","createElement","console","warn","property","nodeType","Node","ELEMENT_NODE","appendChild","innerText","innerHTML","avatarElement","src","insertAdjacentElement","closeElement","addEventListener","event","stopPropagation","removeElement","window","clearTimeout","timeOutValue","bind","width","innerWidth","screen","self","setTimeout","open","location","getAxisOffsetAValue","xOffset","yOffset","transform","showToast","rootElement","getElementById","HTMLElement","ShadowRoot","body","elementToInsert","firstChild","lastChild","insertBefore","reposition","hideToast","replace","parentNode","removeChild","call","topLeftOffsetSize","top","bottom","topRightOffsetSize","offsetSize","allToasts","getElementsByClassName","classUsed","i","length","containsClass","height","offsetHeight","substr","axis","isNaN","elem","yourClass","trim","split","indexOf","TypeIcons","ToastPositions","top-left","top-center","top-right","bottom-left","bottom-center","bottom-right","CatNotificationService","[object Object]","title","message","template","typeIcon","type","info","hasMessage","hasMessageClass","_a","content","getPosition","toastOptions","toastHTMLTemplate","DURATION","NotificationsService"],"mappings":"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","sourcesContent":["/*!\n * Toastify js 1.11.2\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.11.2\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"span\");\n        closeElement.innerHTML = \"&#10006;\";\n\n        closeElement.className = \"toast-close\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n","import Toastify, { Options } from 'toastify-js';\n\nexport enum TypeIcons {\n  'success' = 'check-circle-filled',\n  'error' = 'sparkle-filled',\n  'info' = 'sparkle-filled'\n}\n\nexport const ToastPositions: { [key: string]: { gravity: 'top' | 'bottom'; position: 'left' | 'center' | 'right' } } = {\n  'top-left': {\n    gravity: 'top',\n    position: 'left'\n  },\n  'top-center': {\n    gravity: 'top',\n    position: 'center'\n  },\n  'top-right': {\n    gravity: 'top',\n    position: 'right'\n  },\n  'bottom-left': {\n    gravity: 'bottom',\n    position: 'left'\n  },\n  'bottom-center': {\n    gravity: 'bottom',\n    position: 'center'\n  },\n  'bottom-right': {\n    gravity: 'bottom',\n    position: 'right'\n  }\n};\n\nexport interface ToastPosition {\n  gravity: 'top' | 'bottom';\n  position: 'left' | 'center' | 'right';\n}\n\nexport interface ToastOptions {\n  /**\n   * HTML content of the toast\n   */\n  content: Node;\n  /**\n   * Show close button\n   */\n  close: boolean;\n  /**\n   * Toast position\n   */\n  position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n  /**\n   *  Type of toast\n   */\n  type: 'success' | 'info' | 'error';\n  /**\n   *  Invoked when the toast is clicked\n   */\n  onClick: () => void;\n  /**\n   * Toggle the default behavior of escaping HTML markup\n   */\n  escapeMarkup: boolean;\n}\n\nclass CatNotificationService {\n  private static DURATION = 8000;\n\n  toastHTMLTemplate(title: string, message = ' ', options?: Partial<ToastOptions>): HTMLElement {\n    const template = document.createElement('template');\n    const typeIcon = options?.type ? TypeIcons[options.type] : TypeIcons.info;\n    title = title.trim();\n    message = message.trim();\n    const hasMessage = message && message !== '';\n    const hasMessageClass = hasMessage ? 'has-message' : '';\n    template.innerHTML = `<div class=\"cat-toastify-wrapper\">\n        <div class=\"cat-toastify-icon-wrapper ${options?.type ?? 'info'}\">\n             <cat-icon icon=\"${typeIcon}\"></cat-icon>\n        </div>\n        <div class=\"cat-toastify-title-wrapper ${hasMessageClass}\">\n            <div class=\"cat-toastify-title\">${title}</div></div>\n        ${hasMessage ? `<div class=\"cat-toastify-message\">${message}</div>` : ''}\n      </div>`;\n    return template.content.firstChild as HTMLElement;\n  }\n\n  error(title: string, message = ' ', options?: Partial<ToastOptions>): void {\n    const position: ToastPosition = this.getPosition(options);\n    const toastOptions: Options = {\n      node: options?.content ? options.content : this.toastHTMLTemplate(title, message, options),\n      duration: CatNotificationService.DURATION,\n      close: true,\n      className: 'cat-toastify',\n      gravity: position.gravity,\n      position: position.position,\n      stopOnFocus: true\n    };\n    Toastify(toastOptions).showToast();\n  }\n\n  success(title: string, message = ' ', options?: Partial<ToastOptions>): void {\n    const position: ToastPosition = this.getPosition(options);\n    const toastOptions: Options = {\n      node: options?.content ? options.content : this.toastHTMLTemplate(title, message, options),\n      duration: CatNotificationService.DURATION,\n      close: true,\n      className: 'cat-toastify',\n      gravity: position.gravity,\n      position: position.position,\n      stopOnFocus: true\n    };\n    Toastify(toastOptions).showToast();\n  }\n\n  info(title: string, message = ' ', options?: Partial<ToastOptions>): void {\n    const position: ToastPosition = this.getPosition(options);\n    const toastOptions: Options = {\n      node: options?.content ? options.content : this.toastHTMLTemplate(title, message, options),\n      duration: CatNotificationService.DURATION,\n      close: true,\n      className: 'cat-toastify',\n      gravity: position.gravity,\n      position: position.position,\n      stopOnFocus: true\n    };\n    Toastify(toastOptions).showToast();\n  }\n\n  private getPosition(options?: Partial<ToastOptions>): ToastPosition {\n    const position: ToastPosition = {\n      gravity: 'bottom',\n      position: 'right'\n    };\n    if (options?.position && ToastPositions[options.position]) {\n      position.position = ToastPositions[options.position].position;\n      position.gravity = ToastPositions[options.position].gravity;\n    }\n    return position;\n  }\n}\n\nexport const NotificationsService = new CatNotificationService();\n"]}