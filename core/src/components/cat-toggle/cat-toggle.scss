@use 'variables' as *;
@use 'mixins' as *;
@use 'src/components/cat-form-hint/cat-form-hint';

$toggle-width: 2rem;
$toggle-height: 1.25rem;

:host {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: $cat-body-margin-bottom;
}

:host([hidden]) {
  display: none;
}

label {
  flex: 0 1 auto;
  display: flex;
  gap: 0.5rem;
  @include cat-body('m');
  @include cat-select(none);
  cursor: pointer;
}

.label-left {
  flex-direction: row-reverse;
}

input {
  position: absolute;
  margin: 0;
  width: $toggle-width;
  height: $toggle-height;
  opacity: 0;
  cursor: inherit;
}

.toggle {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  width: $toggle-width;
  height: $toggle-height;
  border-radius: 10rem;
  background-color: cat-token('color.ui.border.input');
  transition: background-color cat-token('time.transition.s') ease;
  pointer-events: none;

  :checked + & {
    background-color: cat-token('color.theme.primary.bg');
  }

  :focus-visible + & {
    outline: 2px solid cat-token('color.ui.border.focus');
    outline-offset: 1px;
  }

  &::after {
    content: '';
    position: absolute;
    width: 1rem;
    height: 1rem;
    background: #fff;
    border-radius: 10rem;
    transform: translateX(calc(2px - 0.5rem));
    transition: transform cat-token('time.transition.s') linear;
    @include cat-elevation(1);

    :checked + & {
      transform: translateX(calc(-2px + 0.5rem));
    }
  }
}

.label {
  flex: 1 1 auto;

  .is-hidden & {
    @include cat-visually-hidden;
  }
}

.is-disabled {
  cursor: not-allowed;
  color: cat-token('color.ui.font.muted');
}
